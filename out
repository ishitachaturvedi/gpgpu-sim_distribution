Binary file lib/gcc-6.5.0/cuda-9010/release/libcudart.so matches
Binary file lib/gcc-6.5.0/cuda-9010/debug/libcudart.so matches
src/gpgpusim_entrypoint.cc:int active_warp;
src/gpgpu-sim/gsi_prof.h:extern int active_warp;
src/gpgpu-sim/gpu-sim.cc:      "two_level_active:<num_active_warps>:<inner_prioritization>:<outer_"
src/gpgpu-sim/shader.cc:      m_active_warps(0),
src/gpgpu-sim/shader.cc:    m_active_warps = 0;
src/gpgpu-sim/shader.cc:      ++m_active_warps;
src/gpgpu-sim/shader.cc: if(m_active_warps==0)
src/gpgpu-sim/shader.cc:  if (m_active_warps > 0) {
src/gpgpu-sim/shader.cc:    active += m_active_warps;
src/gpgpu-sim/shader.cc:          --m_active_warps;
src/gpgpu-sim/shader.cc:          assert(m_active_warps >= 0);
src/gpgpu-sim/shader.cc:        //if(m_active_warps==0)
src/gpgpu-sim/shader.cc:            if(tempw[active_warp]>mem_str){
src/gpgpu-sim/shader.cc:                          tempw[active_warp]=mem_str;
src/gpgpu-sim/shader.cc:    while (m_next_cycle_prioritized_warps.size() < m_max_active_warps) {
src/gpgpu-sim/shader.cc:       if(tempw[active_warp]>mem_str){
src/gpgpu-sim/shader.cc:               tempw[active_warp]=mem_str;
src/gpgpu-sim/shader.cc:       if(tempw[active_warp]>mem_str){
src/gpgpu-sim/shader.cc:               tempw[active_warp]=mem_str;
src/gpgpu-sim/shader.cc:        if(tempw[active_warp]<mem_data){
src/gpgpu-sim/shader.cc:                tempw[active_warp]=mem_data;
src/gpgpu-sim/shader.cc:        if(tempw[active_warp]<mem_data){
src/gpgpu-sim/shader.cc:                tempw[active_warp]=mem_data;
src/gpgpu-sim/shader.cc:                if(tempw[active_warp]>mem_str){
src/gpgpu-sim/shader.cc:                     tempw[active_warp]=mem_str;
src/gpgpu-sim/shader.cc:                if(tempw[active_warp]>mem_data){
src/gpgpu-sim/shader.cc:                        tempw[active_warp]=mem_data;
src/gpgpu-sim/shader.cc:	 if (tempw[active_warp]<mem_str){
src/gpgpu-sim/shader.cc:                                   tempw[active_warp]=mem_str;
src/gpgpu-sim/shader.cc:	  if(tempw[active_warp]>mem_data){
src/gpgpu-sim/shader.cc:                   tempw[active_warp]=mem_data;}
src/gpgpu-sim/shader.cc:        if(tempw[active_warp]>synco){
src/gpgpu-sim/shader.cc:                tempw[active_warp]=synco;
src/gpgpu-sim/shader.cc:        if(tempw[active_warp]>synco){
src/gpgpu-sim/shader.cc:                tempw[active_warp]=synco;
src/gpgpu-sim/shader.cc:        if(tempw[active_warp]>synco){
src/gpgpu-sim/shader.cc:                tempw[active_warp]=synco;
src/gpgpu-sim/shader.h:        sscanf(config_str, "two_level_active:%d:%d:%d", &m_max_active_warps,
src/gpgpu-sim/shader.h:    if (m_next_cycle_prioritized_warps.size() < m_max_active_warps) {
src/gpgpu-sim/shader.h:  unsigned m_max_active_warps;
src/gpgpu-sim/shader.h:  int m_active_warps;
Binary file build/gcc-6.5.0/cuda-9010/release/gpgpusim_entrypoint.o matches
Binary file build/gcc-6.5.0/cuda-9010/release/gpgpu-sim/scoreboard.o matches
Binary file build/gcc-6.5.0/cuda-9010/release/gpgpu-sim/gpu-sim.o matches
Binary file build/gcc-6.5.0/cuda-9010/release/gpgpu-sim/l2cache.o matches
Binary file build/gcc-6.5.0/cuda-9010/release/gpgpu-sim/libgpu_uarch_sim.a matches
Binary file build/gcc-6.5.0/cuda-9010/release/gpgpu-sim/shader.o matches
Binary file build/gcc-6.5.0/cuda-9010/release/libgpgpusim.a matches
Binary file build/gcc-6.5.0/cuda-9010/debug/gpgpusim_entrypoint.o matches
Binary file build/gcc-6.5.0/cuda-9010/debug/gpgpu-sim/scoreboard.o matches
Binary file build/gcc-6.5.0/cuda-9010/debug/gpgpu-sim/gpu-sim.o matches
Binary file build/gcc-6.5.0/cuda-9010/debug/gpgpu-sim/l2cache.o matches
Binary file build/gcc-6.5.0/cuda-9010/debug/gpgpu-sim/libgpu_uarch_sim.a matches
Binary file build/gcc-6.5.0/cuda-9010/debug/gpgpu-sim/shader.o matches
Binary file build/gcc-6.5.0/cuda-9010/debug/libgpgpusim.a matches
